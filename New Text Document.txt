
Certainly! Here are examples of how you can implement factorial, Fibonacci, and a series in C, C++, Python, and Java.

Factorial:
C:
c

#include <stdio.h>

int factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

int main() {
    int num = 5; // Example input
    printf("Factorial of %d is %d\n", num, factorial(num));
    return 0;
}
C++:
cpp
Copy 
#include <iostream>
using namespace std;

int factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}

int main() {
    int num = 5; // Example input
    cout << "Factorial of " << num << " is " << factorial(num) << endl;
    return 0;
}
Python:
python

def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)

num = 5  # Example input
print(f"Factorial of {num} is {factorial(num)}")
Java:
java
Copy code
public class Factorial {

    public static int factorial(int n) {
        if (n == 0 || n == 1) {
            return 1;
        } else {
            return n * factorial(n - 1);
        }
    }

    public static void main(String[] args) {
        int num = 5; // Example input
        System.out.println("Factorial of " + num + " is " + factorial(num));
    }
}
Fibonacci:
C, C++, Python:
c

#include <stdio.h>

int fibonacci(int n) {
    if (n <= 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    int num = 6; // Example input
    printf("Fibonacci sequence up to %d terms:\n", num);
    for (int i = 0; i < num; i++) {
        printf("%d ", fibonacci(i));
    }
    return 0;
}
cpp

#include <iostream>
using namespace std;

int fibonacci(int n) {
    if (n <= 1) {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    int num = 6; // Example input
    cout << "Fibonacci sequence up to " << num << " terms:" << endl;
    for (int i = 0; i < num; i++) {
        cout << fibonacci(i) << " ";
    }
    return 0;
}
python

def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

num = 6  # Example input
print(f"Fibonacci sequence up to {num} terms:")
for i in range(num):
    print(fibonacci(i), end=" ")
Java:
java

public class Fibonacci {

    public static int fibonacci(int n) {
        if (n <= 1) {
            return n;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }
    }

    public static void main(String[] args) {
        int num = 6; // Example input
        System.out.print("Fibonacci sequence up to " + num + " terms:\n");
        for (int i = 0; i < num; i++) {
            System.out.print(fibonacci(i) + " ");
        }
    }
}
Series:
C, C++, Python:
c

#include <stdio.h>

void series(int n) {
    int a = 0, b = 1, c;
    printf("Series up to %d terms:\n", n);
    printf("%d %d ", a, b);
    for (int i = 2; i < n; i++) {
        c = a + b;
        printf("%d ", c);
        a = b;
        b = c;
    }
}

int main() {
    int num = 6; // Example input
    series(num);
    return 0;
}
cpp

#include <iostream>
using namespace std;

void series(int n) {
    int a = 0, b = 1, c;
    cout << "Series up to " << n << " terms:" << endl;
    cout << a << " " << b << " ";
    for (int i = 2; i < n; i++) {
        c = a + b;
        cout << c << " ";
        a = b;
        b = c;
    }
}

int main() {
    int num = 6; // Example input
    series(num);
    return 0;
}
python

def series(n):
    a, b = 0, 1
    print(f"Series up to {n} terms:")
    print(a, b, end=" ")
    for i in range(2, n):
        c = a + b
        print(c, end=" ")
        a = b
        b = c

num = 6  # Example input
series(num)
Java:
java

public class Series {

    public static void series(int n) {
        int a = 0, b = 1, c;
        System.out.print("Series up to " + n + " terms:\n");
        System.out.print(a + " " + b + " ");
        for (int i = 2; i < n; i++) {
            c = a + b;
            System.out.print(c + " ");
            a = b;
            b = c;
        }
    }

    public static void main(String[] args) {
        int num = 6; // Example input
        series(num);
    }
}